on:
  release:
    types:
      - published

env:
  IMAGE_NAME: buluma/ansible_galaxy_collection

name: Release
jobs:
  release:
    name: Release GitHub Actions
    runs-on: ubuntu-latest
    steps:
      - name: Semver release
        uses: technote-space/release-github-actions@v8.0.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLEAN_TARGETS: ''

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Get the version
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.1.0
        with:
          install: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.RELEASE_VERSION }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # If on master branch, build and release image.
  release_to_galaxy:
    name: Release
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image.
        uses: docker/build-push-action@v2
        with:
          context: .
          attests: type=sbom,generator=image
          provenance: mode=max
          sbom: true
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: buluma/ansible_galaxy_collection:2.7.1, ${{ github.repository }}:latest
